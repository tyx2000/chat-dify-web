# name: Deploy to VPS

# on:
#   push:
#     branches: ['main']
#   pull_request:
#     branches: ['main']

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout reqpository
#         uses: actions/checkout@v3

#       - name: set ssh token
#         uses: webfactory/ssh-agent@v0.7.0
#         with:
#           ssh-private-key: ${{ secrets.SSH_TOKEN }}

#       - name: delete old code
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "rm -rf ~/servers/chat-dify-nextjs/chat-dify-web"

#       - name: push files to vps
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ~/services/chat-dify-nextjs/chat-dify-web"
#           scp -r -o StrictHostKeyChecking=no . ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:~/servers/chat-dify-nextjs/chat-dify-web

#       - name: stop previous servers
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "cd ~/servers/chat-dify-nextjs && docker-compose down && echo 'server stopped successfully'"

#       - name: start servers
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "cd ~/servers/chat-dify-nextjs && docker-compose up -d && echo 'server started successfully'"

# github action 生成 docker image
name: deploy to vps

on:
  workflow_dispatch:
    # inputs:
    #   target_tag:
    #     description: 'tag to rollback to'
    #     required: true
    inputs:
      branch:
        description: 'branch to build'
        required: true
        default: main
  # push:
  #   branches:
  #     - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # env:
    #   NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
    #   NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          node-version: 18
          key: ${{ runner.os }}-npm-${{ github.ref_name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ github.ref_name }}-
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci

      - name: build and tag nextjs docker image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
            --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} \
            -t chat-dify-web:${{ github.sha }} .
          echo "====================build image=============="
          docker images chat-dify-web:${{ github.sha }}
          echo "====================build image=============="
          docker tag chat-dify-web:${{ github.sha }} chat-dify-web:latest

      - name: save image to tar
        run: docker save -o chat-dify-web-${{ github.sha }}.tar chat-dify-web:${{ github.sha }}

      - name: upload docker image tar
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_TOKEN }}
          source: chat-dify-web-${{ github.sha }}.tar
          target: ~/docker-images/

      - name: load and run docker image on vps
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_TOKEN }}
          script: |
            docker load -i ~/docker-images/chat-dify-web-${{ github.sha }}.tar
            
            echo "====================load image=============="
            docker images chat-dify-web:${{ github.sha }}
            echo "====================load image=============="

            cd ~/docker-images/ && ls

            rm -rf ~/docker-images/chat-dify-web-${{ github.sha }}.tar
          # ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} << EOF
          # cd ~/servers/chat-dify-nextjs
          # docker load -i ~/servers/docker-images/chat-dify-web-${{ github.sha }}.tar
          # rm -rf ~/servers/docker-images/chat-dify-web-${{ github.sha }}.tar
          # docker-compose down
          # sed -i "s|chat-dify-web.*|chat-dify-web:${{ github.sha }}|g" docker-compose.yml
          # docker-compose up -d
          # EOF
